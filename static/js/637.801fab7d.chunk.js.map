{"version":3,"file":"static/js/637.801fab7d.chunk.js","mappings":"6MA+EA,UAxEkB,WAChB,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAmC1B,OAPAC,EAAAA,EAAAA,YAAU,WAEJH,GACFI,EAAAA,GAAAA,MAAY,6CAEhB,GAAG,CAACJ,KAGFK,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,WAAY,IAAKC,SAAA,EAE7BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gBACJH,EAAAA,EAAAA,MAAA,QACEK,SAhCkB,SAAAC,GACtBA,EAAMC,iBACN,IAKMC,EAAW,CACfC,MANYH,EAAMI,cAAcC,SAASC,UAAUC,MAOnDC,SANeR,EAAMI,cAAcC,SAASI,aAAaF,OAU3DpB,GAASuB,EAAAA,EAAAA,IAAaR,GAKxB,EAeMP,MAAO,CAAEgB,QAAS,OAAQC,cAAe,SAAUC,IAAK,IAAKhB,SAAA,EAE7DH,EAAAA,EAAAA,MAAA,SAAOC,MAAO,CAAEgB,QAAS,OAAQE,IAAK,IAAKhB,SAAA,CAAC,UAE1CC,EAAAA,EAAAA,KAAA,SACEgB,KAAK,QACLC,KAAK,YACLC,YAAY,4BACZC,UAAQ,QAGZvB,EAAAA,EAAAA,MAAA,SAAOC,MAAO,CAAEgB,QAAS,OAAQE,IAAK,IAAKhB,SAAA,CAAC,aAE1CC,EAAAA,EAAAA,KAAA,SACEgB,KAAK,WACLC,KAAK,eACLC,YAAY,cACZE,UAAW,EACXD,UAAQ,QAGZnB,EAAAA,EAAAA,KAAA,UAAQgB,KAAK,SAASnB,MAAO,CAAEwB,MAAO,KAAMtB,SAAC,iBAMrD,C","sources":["pages/LoginPage.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { apiLoginUser } from 'components/redux/Auth/authSlice';\nimport { selectAuthError } from 'components/redux/Auth/AuthSlice.selectors';\nimport { toast } from 'react-toastify';\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n  const error = useSelector(selectAuthError);\n  // useEffect(() => {\n  //   if (error) {\n  //     setTimeout(() => {\n  //       toast.error('Please, write a correct email or password!'); // можливо, використовуйте більш конкретний текст помилки, якщо доступно\n  //     }, 500); // затримка перед виведенням toast\n  //   }\n  // }, [error]);\n  const onSubmitRegistr = event => {\n    event.preventDefault();\n    const email = event.currentTarget.elements.userEmail.value;\n    const password = event.currentTarget.elements.userPassword.value;\n    // console.log(name);\n    // console.log(email);\n    // console.log(password);\n    const formData = {\n      email,\n      password,\n    };\n    //console.log(formData);\n\n    dispatch(apiLoginUser(formData));\n    // if (error) {\n    //   toast.error('Please, write a correct email or password!'); // можливо, використовуйте більш конкретний текст помилки, якщо доступно\n    // }\n    //event.currentTarget.reset();\n  };\n\n  useEffect(() => {\n    // Вивести toast при наявності помилки\n    if (error) {\n      toast.error('Please, write a correct email or password!');\n    }\n  }, [error]);\n\n  return (\n    <div style={{ marginLeft: 30 }}>\n      {/* {error && toast.error('Please, write a correct email or password!')} */}\n      <h1>Login page</h1>\n      <form\n        onSubmit={onSubmitRegistr}\n        style={{ display: 'flex', flexDirection: 'column', gap: 10 }}\n      >\n        <label style={{ display: 'flex', gap: 45 }}>\n          Email:\n          <input\n            type=\"email\"\n            name=\"userEmail\"\n            placeholder=\"KlavdiaPetrivna@gmail.com\"\n            required\n          />\n        </label>\n        <label style={{ display: 'flex', gap: 15 }}>\n          Password:\n          <input\n            type=\"password\"\n            name=\"userPassword\"\n            placeholder=\"***********\"\n            minLength={7}\n            required\n          />\n        </label>\n        <button type=\"submit\" style={{ width: 100 }}>\n          Sign in\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"names":["dispatch","useDispatch","error","useSelector","selectAuthError","useEffect","toast","_jsxs","style","marginLeft","children","_jsx","onSubmit","event","preventDefault","formData","email","currentTarget","elements","userEmail","value","password","userPassword","apiLoginUser","display","flexDirection","gap","type","name","placeholder","required","minLength","width"],"sourceRoot":""}